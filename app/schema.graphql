scalar Upload

type Query{
    Users: [User]
    UserName(name:String!): User
    UserMail(email:String!): User
    Artists:[Artist]
    ArtistName(name:String!):Artist
    Albums:[Album]
    AlbumId(id:ID!):Album
    AlbumName(name:String!):Album
    Songs:[Song]
    SongId(id:ID!):Song
    SongName(name:String!):Song
}

type Mutation{
     signup(data:UserCreateInput) : Auth
     login(email:String!, password:String!): Auth
     updateUser(name:String!, data:UserUpdateInput) : User
     deleteUser(name:String):String
     createArtist(data:ArtistCreateInput) : Artist
     updateArtist(data:ArtistUpdateInput) : Artist
     deleteArtist(id:ID):String
     createAlbum(data:AlbumCreateInput) : Album
     updateAlbum(data:AlbumUpdateInput) : Album
     updateAlbumN(data:AlbumUpdateInput) : Album
     deleteAlbum(id:ID): String
     createSong(data:SongCreateInput) : Song
     updateSong(data:SongUpdateInput) : Song
     updateSongN(data:SongUpdateInput) : Song
     deleteSong(id:ID): String
     
}

type Auth{
	token:String
	message:String
}


type User{
    name:String
    email:String
    password:String
    birth_date:String
    gender:GENDER
    is_active:Boolean
    profile_image: String
}

enum GENDER{
    Male 
    Female
}

type Artist{
    name:String!
    biography:String
    galery:String
    albums:[Album]
}

type Album {
    name:String!
    album_cover:String
    year:String
    songs:[Song]
}

type Song{
    name:String!
    artist:[Artist]
    album_cover:[Album]
    duration:String
    url:String
}

input UserCreateInput{
name:String
email: String!
password: String!
birth_date: String
gender: GENDER
is_active: Boolean
profile_image: Upload
}

input UserUpdateInput{
    name:String
    email: String!
    password: String!
    birth_date: String
    gender: GENDER
    is_active: Boolean
}

input ArtistCreateInput{
    name:String!
    biography:String
    galery:String
    albums:[albumInput]
}

input ArtistUpdateInput{
    name:String
    biography:String
    galery:String
    albums:[albumInput]
}

input artistInput{
    name:String!
    biography:String
    galery:String
    albums:[albumInput]
}

input AlbumCreateInput{
    name:String
    album_cover:String
    year:Int
    songs:[songInput]
}

input AlbumUpdateInput{
    name:String
    album_cover:[albumInput]
    year:Int
    songs:[songInput]
}

input albumInput{
    name:String!
    album_cover:String
    year:String
    songs:[songInput]
}

input SongCreateInput{
    name:String
    artists:[artistInput]
    album_cover:[albumInput]
    duration:String
    url:String
}

input SongUpdateInput{
    name:String
    artists:[artistInput]
    album_cover:[albumInput]
    duration:String
    url:String
}

input songInput{
    name:String!
    artist:[artistInput]
    album_cover:[albumInput]
    duration:String
    url:String
}